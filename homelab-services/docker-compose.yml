#stack name
name: "homelab-services"

services:
  homepage:
    # build:
    #   context: ./homepage/
    #   dockerfile: Dockerfile
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      PUID: 1000 # optional, your user id
      PGID: 1000 # optional, your group id
      HOMEPAGE_VAR_PROXMOX_API_TOKEN_ID: $PROXMOX_API_TOKEN_ID
      HOMEPAGE_VAR_PROXMOX_API_TOKEN_SECRET: $PROXMOX_API_TOKEN_SECRET
      HOMEPAGE_VAR_PROXMOX_IP_ADDRESS: $PROXMOX_IP_ADDRESS
      HOMEPAGE_VAR_LXC_IP_ADDRESS: $LXC_IP_ADDRESS
      HOMEPAGE_VAR_OPENWRT_IP_ADDRESS: $OPENWRT_IP_ADDRESS
    ports:
      - 80:3000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - homepage_data:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:2.24.0
    container_name: portainer
    environment:
      # - TZ=Asia/Shanghai
      - PUID=1000
      - PGID=1000
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command: --admin-password "${PORTAINER_PASSWORD_HASH}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    networks:
      - homelab
    ports:
      - "8000:8000"
      - "9443:9443"

  it-tools:
    image: corentinth/it-tools
    container_name: it-tools
    environment:
      # - TZ=Asia/Shanghai
      - PUID=1000
      - PGID=1000
    ports:
      - "81:80"
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - /etc/localtime:/etc/localtime:ro

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    environment:
      - PUID=1000
      - PGID=1000
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # - TZ=Asia/Shanghai
    network_mode: host
    # ports:
    #   - "8096:8096"
    #   - "8920:8920"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - jellyfin-config:/config
      - jellyfin-cache:/cache
      - /usr/share/fonts:/usr/share/fonts
      - /usr/share/fontconfig:/usr/share/fontconfig
      - ~/fonts:/fallback_fonts:ro
      - ~/fonts:/usr/local/share/fonts/custom:ro
      - type: bind
        source: /mnt/media
        target: /mnt/media
        read_only: true
      # - type: bind
      #   source: /path/to/media2
      #   target: /media2
      #   read_only: true
      # Optional - extra fonts to be used during transcoding with subtitle burn-in
      # - type: bind
      #   source: /path/to/fonts
      #   target: /usr/local/share/fonts/custom
      #   read_only: true
    restart: "unless-stopped"
    # Optional - alternative address used for autodiscovery
    # environment:
    #   - JELLYFIN_PublishedServerUrl=http://example.com
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # networks:
    #   - homelab
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  hashcat:
    build:
      context: ./hashcat
      dockerfile: Dockerfile-nvidia
    container_name: hashcat
    environment:
      - PUID=1000
      - PGID=1000
    networks:
      - homelab
    restart: "unless-stopped"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/hashcat:/mnt/hashcat:rw
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  juice:
    image: juicelabs/server:11.8-2023.08.10-2103.0633b794
    container_name: juice
    environment:
      - PORT=43210
    networks:
      - homelab
    restart: "unless-stopped"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "43210:43210"

  scuda:
    build:
      context: ./scuda
      dockerfile: Dockerfile
    container_name: scuda
    # environment:
    #   - PORT=43210
    networks:
      - homelab
    restart: "unless-stopped"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "14833:14833"

  # openrgb:
  #   build:
  #     context: ./OpenRGB
  #     dockerfile: Dockerfile
  #   container_name: openrgb
  #   environment:
  #     - TZ=Asia/Shanghai
  #   ports:
  #     - "6742:6742"
  #   networks:
  #     - homelab
  #   restart: "unless-stopped"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - openrgb_data:/root:rw

  cadvisor:
    build:
      context: ./cadvisor
      dockerfile: Dockerfile
      args:
        CADVISOR_USERNAME: ${CADVISOR_USERNAME}
        CADVISOR_PASSWORD_HASH: ${CADVISOR_PASSWORD_HASH}
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    ports:
      - "8080:8080"
    restart: unless-stopped

  node-bootstrap: # for watchyourlan
    container_name: node-bootstrap
    image: aceberg/node-bootstrap
    restart: unless-stopped
    ports:
      - 8850:8850
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - homelab

  wyl:
    container_name: wyl
    image: aceberg/watchyourlan
    network_mode: "host"
    restart: unless-stopped
    command: -n http://"${LXC_IP_ADDRESS}":8850 # put your server IP or DNS name here
    depends_on:
      - node-bootstrap
    volumes:
      - watchyourlan_data:/data/WatchYourLAN:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: Asia/Shanghai # required: needs your TZ for correct time
      IFACES: "internet lan" # required: 1 or more interface
      HOST: "0.0.0.0" # optional, default: 0.0.0.0
      PORT: "8840" # optional, default: 8840
      TIMEOUT: "120" # optional, time in seconds, default: 120
      SHOUTRRR_URL: "" # optional, set url to notify
      THEME: "sand" # optional
      COLOR: "dark" # optional

volumes:
  portainer_data:
    driver: local
  jellyfin-config:
    driver: local
  jellyfin-cache:
    driver: local
  homepage_data:
    driver: local
  openrgb_data:
    driver: local
  watchyourlan_data:
    driver: local

networks:
  homelab:
    name: "homelab"
